// DAA LAB 6 : 11 September 2024

/*Implement the heap sort algorithms to sort a given array in both ascending and
  descending order. (Use both Min and Max heap)
  Input: 78, 2, 5, 23, 76, 12, 17
  Output 1: 2, 5, 12, 17, 23, 76, 78
  Output 2: 78, 76, 23, 17, 12, 5, 2
*/


#include <stdio.h>

void swap(int* a, int* b) 
{
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Max Heapify
void maxHeapify(int arr[], int n, int i) 
{
    int largest = i, left = 2 * i + 1, right = 2 * i + 2;
    if (left < n && arr[left] > arr[largest]) largest = left;
    if (right < n && arr[right] > arr[largest]) largest = right;
    if (largest != i) 
    {
        swap(&arr[i], &arr[largest]);
        maxHeapify(arr, n, largest);
    }
}

// Build Max Heap
void buildMaxHeap(int arr[], int n) 
{
    for (int i = n / 2 - 1; i >= 0; i--)
        maxHeapify(arr, n, i);
}

// Heap Sort (Descending)
void heapSortMax(int arr[], int n) 
{
    buildMaxHeap(arr, n);
    for (int i = n - 1; i > 0; i--) 
    {
        swap(&arr[0], &arr[i]);
        maxHeapify(arr, i, 0);
    }
}

// Min Heapify
void minHeapify(int arr[], int n, int i) 
{
    int smallest = i, left = 2 * i + 1, right = 2 * i + 2;
    if (left < n && arr[left] < arr[smallest]) smallest = left;
    if (right < n && arr[right] < arr[smallest]) smallest = right;
    if (smallest != i) {
        swap(&arr[i], &arr[smallest]);
        minHeapify(arr, n, smallest);
    }
}

// Build Min Heap
void buildMinHeap(int arr[], int n) 
{
    for (int i = n / 2 - 1; i >= 0; i--)
        minHeapify(arr, n, i);
}

// Heap Sort (Ascending)
void heapSortMin(int arr[], int n) 
{
    buildMinHeap(arr, n);
    for (int i = n - 1; i > 0; i--) 
    {
        swap(&arr[0], &arr[i]);
        minHeapify(arr, i, 0);
    }
}

void printArray(int arr[], int n) 
{
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

int main() 
{
    int arr1[] = {78, 2, 5, 23, 76, 12, 17};
    int n = sizeof(arr1) / sizeof(arr1[0]);
    
    // Sorting in ascending order
    heapSortMin(arr1, n);
    printf("Descending Order: ");
    printArray(arr1, n);
    
    // Sorting in descending order
    int arr2[] = {78, 2, 5, 23, 76, 12, 17}; // Reset array
    heapSortMax(arr2, n);
    printf("Ascending Order: ");
    printArray(arr2, n);
    
    return 0;
}


OUTPUT:

Descending Order: 78 76 23 17 12 5 2 
Ascending Order: 2 5 12 17 23 76 78
