#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define MAX_VERTICES 100

void topologicalSortUtil(int v, int adj[MAX_VERTICES][MAX_VERTICES], bool visited[], int *stack, int *top, int V) {
    visited[v] = true;
    for (int i = 0; i < V; i++)
    {
        if (adj[v][i] && !visited[i])
            topologicalSortUtil(i, adj, visited, stack, top, V);
    }
    stack[(*top)++] = v;
}

void topologicalSort(int adj[MAX_VERTICES][MAX_VERTICES], int V) 
{
    bool visited[MAX_VERTICES] = {false};
    int stack[MAX_VERTICES], top = 0;

    for (int i = 0; i < V; i++)
        if (!visited[i])
            topologicalSortUtil(i, adj, visited, stack, &top, V);

    for (int i = top - 1; i >= 0; i--)
        printf("%d ", stack[i]);
}

int main() 
{
    int V = 4, edges[][2] = {{0, 1}, {1, 2}, {3, 1}, {3, 2}};
    int adj[MAX_VERTICES][MAX_VERTICES] = {0};

    for (int i = 0; i < 4; i++)
        adj[edges[i][0]][edges[i][1]] = 1;

    printf("Topological sorting of the graph: ");
    topologicalSort(adj, V);

    return 0;
}
